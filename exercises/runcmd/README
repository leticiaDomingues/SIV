
    POSIX Exempli Gratia (POSIX by example)

    Copyright (c) 2015 Francisco Jose Monaco <monaco@icmc.usp.br>
    This is Free Open Source Software. For licensing, see COPYING
    POSIX-eg repository can be found at https://gitlab.com/monaco/posixeg



    	     		    RUNCMD EXERCISE
			    ---------------

OVERVIEW
--------

Libruncmd is a small C library providing some simple functionality specified in
the companion file runcmd.txt.  This file, presented as a man-page like document,
describes the library API.

The implementation of libruncmd supplied with POSIXeg is incomplete and is meant
as an skeleton to be further developed by the student as an exercise. The 
proposed work consists in completing the implementation to meet the 
specification.

Please, read the following instructions thoroughly before starting to work on
the exercise. There are some important rules and useful tips that you should
not miss.

If you are following the proposed exercises' roadmap, you will upload your 
software to a public Git repository using a Free Software / Open Source license.

INSTRUCTIONS
------------

First, read posixeg/instructions/README.

Then, please, go through libruncmd specification in runcmd.txt.

The file, formatted like a traditional man page, specifies the libruncmd API,
comprised by a single function runcmd() and a set of macros. The library is
implemented in the source file runcmd.c and the header file posixeg/runcmd.h.

The library can be built and installed with the aid of the provided Makefile by
issuing the command line at the shell prompt

    $ cd <somepath>/posixeg/exercises/runcmd
    $ make
    $ make install

Note: you should have already invoked autotools configure script from the
top source directory. If not, consult posixeg/README and issue

    $ cd <somepath>/posixeg
    $ ./configure --prefix=<installpath>

before trying to build runcmd.

The command shall build both the static and the shared versions of the library, 
libruncmd.a and libruncmd.so, respectively, as well as some executable programs
meant for testing the function runcmd.

You should find the (libtool) library libruncmd under directory runcmd/lib.
There are also some test programs which you should find under runcmd/test.

    $ cd <somepath>/posixeg/exercises/runcmd/test
    $ make test

Note: you should have already issued make install from runcmd directory as
aforementioned.

The test suite consists of several checks, all of them should ideally
report success.  The provided implementation is, however, incomplete and,
therefore, some tests will fail. Your task consists in finishing the library
implementation so that it comply with the man page (runcmd.txt)

To begin with the exercise you should follow the general guidelines given in
posixeg/instructions/README. In addition, please notice the following
directions specific to this exercise. Go through the whole instruction
before you start (as there are some important rules and useful tips ahead).


ROADMAP
-------

1) Create a subdirectory runcmd within your project's main directory. 

   For instance if your project lies on <somepath>/myproject, create a
   runcmd directory <somepath>/myproject/runcmd

   $ cd <somepath>/myproject
   $ mkdir runcmd

2) Within your runcmd directory, put your implementation of libruncmd.

   Your implementaion shall provide only the sources needed to build
   libruncmd.  No executable files should be added to the directory.

   As for the review of your exercise, POSIXeg's own test programs
   (not yours, if any) will be linked agains your library.  For instance,
   if your library has been compiled and installed under /tmp/foo, then
   in order to test your library you may do as follows:

   a) install your library's objects and headers under

      /tmp/foo/lib 
      /tmp/foo/include/posixeg

      respectively, using the appropriate install command (either from a custom
      Makefile or autotools' configure script, according to what was specified
      in proposed exercise's wording).
      
   b) link POSIXeg's runcmd tests to your library by using the specifial
      user flag ALTPREFIX 

   $ cd <somepath>/posixeg/runcmd/test
   $ make clean
   $ make ALTPREFIX=/tmp/foo

   c) run the tests

   $ make test

   Please, make sure that your library can be linked to POSIXeg's
   test programs, as well as that POSIXeg's test programs report
   success for the relevant tests.

3) Provide a Makefile to build and install your library.

   Please, consult posixeg/instructions/README and make sure your Makefile
   complies with the specifications (rules to build and install, honoring
   the user variable PREFIX).

RELEASE IDENTIFIER
------------------

The release code for this exercise is runcmd.

Unless otherwise specified, the release numbers of this expercises are

* 000 : upodate the project tree structure and contents, if not already done
* 001 : pass test cases from T1-001 to T1-007 (ignore remaining tests)
* 002 : pass test cases from T1-001 to T1-008 (ignore remaining tests)
* 003 : pass test cases from T1-001 to T4-001 (that is all)
* 004 : migrate your project to GNU build system, if not already done



